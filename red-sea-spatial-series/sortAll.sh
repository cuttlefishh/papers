# sortAll.sh - cats and sorts mine output
# Must be run on Dell because output is in ~/krse2011-data/mine on Dell
# Value for end of j is generated by numMasterVariables.sh

# KOrelAbund
cd ~/krse2011/mine/KOrelAbund
for i in KOrelAbund
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..5793}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done

# moduleCoverage
cd ~/krse2011/mine/moduleCoverage
for i in moduleCoverage
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..130}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done

# moduleRelAbund
cd ~/krse2011/mine/moduleRelAbund
for i in moduleRelAbund
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..201}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done

# pathwayCoverage
cd ~/krse2011/mine/pathwayCoverage
for i in pathwayCoverage
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..159}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done

# pathwayRelAbund
cd ~/krse2011/mine/pathwayRelAbund
for i in pathwayRelAbund
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..180}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann_$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done

# pathwayRelAbund_PRO
cd ~/krse2011/mine/pathwayRelAbund
for i in pathwayRelAbund_PRO
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann.$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..100}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann.$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done

# pathwayRelAbund_ECO
cd ~/krse2011/mine/pathwayRelAbund
for i in pathwayRelAbund_ECO
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann.$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..317}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann.$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done

# KOrelAbund_ECO
cd ~/krse2011/mine/KOrelAbund
for i in KOrelAbund_ECO
do
	# print header
	head -n 1 ~/krse2011-data/mine/krse2011_v3_humann.$i*mv\=1,*Results.csv > mine.$i.csv
	# cat results, remove headers, sort on MIC (strength), print
	for j in {1..13} {15..3870}
	do
	    cat ~/krse2011-data/mine/krse2011_v3_humann.$i*mv\=$j,*Results.csv | grep -v "X var" >> tmp
	done
	cat tmp | grep -v "station\|read" | perl -ne '@F = split /,/; if ($F[0] lt $F[1]) { print "$F[0],$F[1]" } else { print "$F[1],$F[0]"} print ",$F[2],$F[3],$F[4],$F[5],$F[6],$F[7]"' | sort | uniq | sort -t, -k3rg >> mine.$i.csv
	/bin/rm tmp
done



